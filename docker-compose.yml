version: "3"

services:
  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    ports:
      - "80:80" # Mapea el puerto 80 del host al puerto 80 del contenedor (HTTP)
      - "443:443" # Mapea el puerto 443 del host al puerto 443 del contenedor (HTTPS)
      - "81:81" # Interfaz de administraci√≥n de Nginx Proxy Manager   # Utilizando SQLite para la base de datos por simplicidad                     # Opcional: desactiva IPv6 si no se usa
    volumes:
      - ./nginx-proxy-manager/data:/data
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    networks:
      - app_network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  db:
    build:
      context: ./db
    container_name: db_service
    volumes:
      - db_data:/data
    networks:
      - app_network
    ports:
      - "5002:5002"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  backend:
    build:
      context: ./backend
    container_name: backend_service
    depends_on:
      - db
    networks:
      - app_network
    ports:
      - "5000:5000"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  frontend:
    build:
      context: ./frontend
    container_name: frontend_service
    depends_on:
      - backend
    networks:
      - app_network
    ports:
      - "5001:5001"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  redis:
    image: redis:latest
    container_name: redis_service
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

volumes:
  db_data:
  redis_data:

networks:
  app_network:
    driver: bridge
